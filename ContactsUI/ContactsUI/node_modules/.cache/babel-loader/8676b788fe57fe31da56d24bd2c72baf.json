{"ast":null,"code":"import _objectSpread from \"D:\\\\product\\\\Projects\\\\frontend\\\\react\\\\The Contacts App\\\\ContactsUI\\\\ContactsUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { FETCH_DATA, FETCH_SUCCESS, FETCH_FAILURE, fetchSuccess, fetchData, fetchFailure } from '../actions';\nimport { combineReducers } from 'redux';\nimport Axios from 'axios';\nvar URL = 'http://localhost:3002/clientData';\nvar initialState = {\n  loading: false,\n  employee: [],\n  error: ''\n};\nexport function fetchEmployee() {\n  return function (dispatch) {\n    dispatch(fetchData());\n    Axios.get(URL).then(function (emp) {\n      dispatch(fetchSuccess(emp));\n    }).catch(function (error) {\n      dispatch(fetchFailure(error));\n    });\n  };\n} // export function getAllBook_AsyncActionCreator() {\n//     return (dispatch) => {\n//       getAllBooksAPI()\n//         .then((data) => {\n//           dispatch(getAllBooks(data));\n//         });\n//     };\n//   }\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_DATA:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case FETCH_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        employee: action.employee,\n        error: ''\n      });\n\n    case FETCH_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        employee: [],\n        error: action.error\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n}\n\nexport default combineReducers({\n  reducer: reducer\n});","map":{"version":3,"sources":["D:/product/Projects/frontend/react/The Contacts App/ContactsUI/ContactsUI/src/reducers/index.js"],"names":["FETCH_DATA","FETCH_SUCCESS","FETCH_FAILURE","fetchSuccess","fetchData","fetchFailure","combineReducers","Axios","URL","initialState","loading","employee","error","fetchEmployee","dispatch","get","then","emp","catch","reducer","state","action","type"],"mappings":";AAAA,SAAQA,UAAR,EAAoBC,aAApB,EAAmCC,aAAnC,EAAkDC,YAAlD,EAAgEC,SAAhE,EAA2EC,YAA3E,QAA8F,YAA9F;AACA,SAAQC,eAAR,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,GAAG,GAAG,kCAAZ;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,OAAO,SAASC,aAAT,GAAwB;AAC3B,SAAO,UAACC,QAAD,EAAY;AACfA,IAAAA,QAAQ,CAACV,SAAS,EAAV,CAAR;AACAG,IAAAA,KAAK,CACAQ,GADL,CACSP,GADT,EAEKQ,IAFL,CAEU,UAACC,GAAD,EAAO;AACTH,MAAAA,QAAQ,CAACX,YAAY,CAACc,GAAD,CAAb,CAAR;AACH,KAJL,EAKKC,KALL,CAKW,UAACN,KAAD,EAAS;AACZE,MAAAA,QAAQ,CAACT,YAAY,CAACO,KAAD,CAAb,CAAR;AACH,KAPL;AAQH,GAVD;AAWH,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASO,OAAT,GAA4C;AAAA,MAA3BC,KAA2B,uEAArBX,YAAqB;AAAA,MAAPY,MAAO;;AACxC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKtB,UAAL;AACI,+BACOoB,KADP;AAEIV,QAAAA,OAAO,EAAC;AAFZ;;AAIJ,SAAKT,aAAL;AACI,+BACOmB,KADP;AAEIV,QAAAA,OAAO,EAAC,KAFZ;AAGIC,QAAAA,QAAQ,EAACU,MAAM,CAACV,QAHpB;AAIIC,QAAAA,KAAK,EAAC;AAJV;;AAMJ,SAAKV,aAAL;AACI,+BACOkB,KADP;AAEIV,QAAAA,OAAO,EAAC,KAFZ;AAGIC,QAAAA,QAAQ,EAAC,EAHb;AAIIC,QAAAA,KAAK,EAACS,MAAM,CAACT;AAJjB;;AAMJ;AACI,+BAAWQ,KAAX;AArBR;AAuBH;;AAED,eAAed,eAAe,CAAC;AAACa,EAAAA,OAAO,EAAPA;AAAD,CAAD,CAA9B","sourcesContent":["import {FETCH_DATA, FETCH_SUCCESS, FETCH_FAILURE, fetchSuccess, fetchData, fetchFailure} from '../actions'\r\nimport {combineReducers} from 'redux';\r\nimport Axios from 'axios';\r\n\r\nconst URL = 'http://localhost:3002/clientData';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    employee: [],\r\n    error: ''\r\n}\r\n\r\nexport function fetchEmployee(){\r\n    return (dispatch)=>{\r\n        dispatch(fetchData());\r\n        Axios\r\n            .get(URL)\r\n            .then((emp)=>{\r\n                dispatch(fetchSuccess(emp))\r\n            })\r\n            .catch((error)=>{\r\n                dispatch(fetchFailure(error))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// export function getAllBook_AsyncActionCreator() {\r\n//     return (dispatch) => {\r\n//       getAllBooksAPI()\r\n//         .then((data) => {\r\n//           dispatch(getAllBooks(data));\r\n//         });\r\n//     };\r\n//   }\r\n\r\n\r\nfunction reducer(state=initialState, action){\r\n    switch(action.type){\r\n        case FETCH_DATA:\r\n            return ({\r\n                ...state,\r\n                loading:true\r\n            })\r\n        case FETCH_SUCCESS:\r\n            return({\r\n                ...state,\r\n                loading:false,\r\n                employee:action.employee,\r\n                error:''\r\n            })\r\n        case FETCH_FAILURE:\r\n            return({\r\n                ...state,\r\n                loading:false,\r\n                employee:[],\r\n                error:action.error\r\n            })\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default combineReducers({reducer});"]},"metadata":{},"sourceType":"module"}